#| fig-height: 750
#| fig-cap: ""
library(tidyverse)
data <- read.csv("Mikesell_Phenology_Data.csv", header = TRUE, na.strings = "999") |>
mutate(bud_burst = as.Date(paste(bud_burst,year),format="%j"),
first_leaf = as.Date(paste(first_leaf,year),format="%j"),
full_leaf = as.Date(paste(full_leaf,year),format="%j"),
open_flowers = as.Date(paste(open_flowers,year),format="%j"),
ripe_fruit = as.Date(paste(ripe_fruit,year),format="%j"),
colored_leaves = as.Date(paste(colored_leaves,year),format="%j"),
leaves_dropped = as.Date(paste(leaves_dropped,year),format="%j"))
ggplot(data, aes(bud_burst,reorder(species, bud_burst, FUN = median, na.rm = TRUE))) +
geom_violin(aes(fill = reorder(species, bud_burst, FUN = median, na.rm = TRUE)), show.legend = FALSE, na.rm = TRUE) +
stat_summary(fun = "median", size = 3.5, geom = "point", na.rm = TRUE) +
geom_jitter(aes(alpha = year), height = 0, width = 0.2, na.rm = TRUE) +
labs(
x = "Date",
y = "Species",
alpha = "Year"
) +
scale_y_discrete(limits=rev) +
theme(axis.text.y = element_text(face="italic",size=12),
axis.text.x = element_text(size=12),
axis.title = element_text(face="bold",size=13),
legend.text = element_text(size=12),
legend.title = element_text(size=13),
panel.background = element_rect(fill="white"),
panel.grid.major = element_line(color="gray93"))
#| code-fold: true
#| fig-height: 750
#| fig-cap: ""
library(tidyverse)
data <- read.csv("Mikesell_Phenology_Data.csv", header = TRUE, na.strings = "999") |>
mutate(bud_burst = as.Date(paste(bud_burst,year),format="%j"),
first_leaf = as.Date(paste(first_leaf,year),format="%j"),
full_leaf = as.Date(paste(full_leaf,year),format="%j"),
open_flowers = as.Date(paste(open_flowers,year),format="%j"),
ripe_fruit = as.Date(paste(ripe_fruit,year),format="%j"),
colored_leaves = as.Date(paste(colored_leaves,year),format="%j"),
leaves_dropped = as.Date(paste(leaves_dropped,year),format="%j"))
ggplot(data, aes(bud_burst,reorder(species, bud_burst, FUN = median, na.rm = TRUE))) +
geom_violin(aes(fill = reorder(species, bud_burst, FUN = median, na.rm = TRUE)), show.legend = FALSE, na.rm = TRUE) +
stat_summary(fun = "median", size = 3.5, geom = "point", na.rm = TRUE) +
geom_jitter(aes(alpha = year), height = 0, width = 0.2, na.rm = TRUE) +
labs(
x = "Date",
y = "Species",
alpha = "Year"
) +
scale_y_discrete(limits=rev) +
theme(axis.text.y = element_text(face="italic",size=12),
axis.text.x = element_text(size=12),
axis.title = element_text(face="bold",size=13),
legend.text = element_text(size=12),
legend.title = element_text(size=13),
panel.background = element_rect(fill="white"),
panel.grid.major = element_line(color="gray93"))
View(data)
#| code-fold: true
library(knitr)
knitr::opts_chunk$set(fig.width = 7, fig.align = "center",
fig.retina = 1, out.width = "90%",
collapse = TRUE)
#| code-fold: true
#| fig-height: 7
#| fig-cap: "Dates Thomas Mikesell observed breaking leaves for various tree species in Wauseon, Ohio"
library(tidyverse)
data <- read.csv("Mikesell_Phenology_Data.csv", header = TRUE, na.strings = "999") |>
mutate(bud_burst = as.Date(paste(bud_burst,year),format="%j"),
first_leaf = as.Date(paste(first_leaf,year),format="%j"),
full_leaf = as.Date(paste(full_leaf,year),format="%j"),
open_flowers = as.Date(paste(open_flowers,year),format="%j"),
ripe_fruit = as.Date(paste(ripe_fruit,year),format="%j"),
colored_leaves = as.Date(paste(colored_leaves,year),format="%j"),
leaves_dropped = as.Date(paste(leaves_dropped,year),format="%j"))
ggplot(data, aes(bud_burst,reorder(species, bud_burst, FUN = median, na.rm = TRUE))) +
geom_violin(aes(fill = reorder(species, bud_burst, FUN = median, na.rm = TRUE)), show.legend = FALSE, na.rm = TRUE) +
stat_summary(fun = "median", size = 3.5, geom = "point", na.rm = TRUE) +
geom_jitter(aes(alpha = year), height = 0, width = 0.2, na.rm = TRUE) +
labs(
x = "Date",
y = "Species",
alpha = "Year"
) +
scale_y_discrete(limits=rev) +
theme(axis.text.y = element_text(face="italic",size=12),
axis.text.x = element_text(size=12),
axis.title = element_text(face="bold",size=13),
legend.text = element_text(size=12),
legend.title = element_text(size=13),
panel.background = element_rect(fill="white"),
panel.grid.major = element_line(color="gray93"))
#| code-fold: true
#| fig-height: 15
#| fig-cap: "Dates Thomas Mikesell observed breaking leaves for various tree species in Wauseon, Ohio"
library(tidyverse)
data <- read.csv("Mikesell_Phenology_Data.csv", header = TRUE, na.strings = "999") |>
mutate(bud_burst = as.Date(paste(bud_burst,year),format="%j"),
first_leaf = as.Date(paste(first_leaf,year),format="%j"),
full_leaf = as.Date(paste(full_leaf,year),format="%j"),
open_flowers = as.Date(paste(open_flowers,year),format="%j"),
ripe_fruit = as.Date(paste(ripe_fruit,year),format="%j"),
colored_leaves = as.Date(paste(colored_leaves,year),format="%j"),
leaves_dropped = as.Date(paste(leaves_dropped,year),format="%j"))
ggplot(data, aes(bud_burst,reorder(species, bud_burst, FUN = median, na.rm = TRUE))) +
geom_violin(aes(fill = reorder(species, bud_burst, FUN = median, na.rm = TRUE)), show.legend = FALSE, na.rm = TRUE) +
stat_summary(fun = "median", size = 3.5, geom = "point", na.rm = TRUE) +
geom_jitter(aes(alpha = year), height = 0, width = 0.2, na.rm = TRUE) +
labs(
x = "Date",
y = "Species",
alpha = "Year"
) +
scale_y_discrete(limits=rev) +
theme(axis.text.y = element_text(face="italic",size=12),
axis.text.x = element_text(size=12),
axis.title = element_text(face="bold",size=13),
legend.text = element_text(size=12),
legend.title = element_text(size=13),
panel.background = element_rect(fill="white"),
panel.grid.major = element_line(color="gray93"))
View(data)
#| code-fold: true
#| fig-height: 6.5
#| fig-cap: "Calendar dates Thomas Mikesell observed breaking leaves for various tree species in Wauseon, Ohio"
library(tidyverse)
data <- read.csv("Mikesell_Phenology_Data.csv", header = TRUE, na.strings = "999") |>
mutate(bud_burst = as.Date(paste(kdata$bud_burst,data$year),format="%j"),
first_leaf = as.Date(paste(first_leaf,year),format="%j"),
full_leaf = as.Date(paste(full_leaf,year),format="%j"),
open_flowers = as.Date(paste(open_flowers,year),format="%j"),
ripe_fruit = as.Date(paste(ripe_fruit,year),format="%j"),
colored_leaves = as.Date(paste(colored_leaves,year),format="%j"),
leaves_dropped = as.Date(paste(leaves_dropped,year),format="%j"))
#| code-fold: true
#| fig-height: 6.5
#| fig-cap: "Calendar dates Thomas Mikesell observed breaking leaves for various tree species in Wauseon, Ohio"
library(tidyverse)
data <- read.csv("Mikesell_Phenology_Data.csv", header = TRUE, na.strings = "999") |>
mutate(bud_burst = as.Date(paste(data$bud_burst,data$year),format="%j"),
first_leaf = as.Date(paste(first_leaf,year),format="%j"),
full_leaf = as.Date(paste(full_leaf,year),format="%j"),
open_flowers = as.Date(paste(open_flowers,year),format="%j"),
ripe_fruit = as.Date(paste(ripe_fruit,year),format="%j"),
colored_leaves = as.Date(paste(colored_leaves,year),format="%j"),
leaves_dropped = as.Date(paste(leaves_dropped,year),format="%j"))
ggplot(data, aes(bud_burst,reorder(species, bud_burst, FUN = median, na.rm = TRUE))) +
geom_violin(aes(fill = reorder(species, bud_burst, FUN = median, na.rm = TRUE)), show.legend = FALSE, na.rm = TRUE) +
stat_summary(fun = "median", size = 3.5, geom = "point", na.rm = TRUE) +
geom_jitter(aes(alpha = year), height = 0, width = 0.2, na.rm = TRUE) +
labs(
x = "Date",
y = "Species",
alpha = "Year"
) +
scale_y_discrete(limits=rev) +
theme(axis.text.y = element_text(face="italic",size=12),
axis.text.x = element_text(size=12),
axis.title = element_text(face="bold",size=13),
legend.text = element_text(size=12),
legend.title = element_text(size=13),
panel.background = element_rect(fill="white"),
panel.grid.major = element_line(color="gray93"))
View(data)
#| code-fold: true
#| fig-height: 6.5
#| fig-cap: "Calendar dates Thomas Mikesell observed breaking leaves for various tree species in Wauseon, Ohio"
library(tidyverse)
data <- read.csv("Mikesell_Phenology_Data.csv", header = TRUE, na.strings = "999") |>
mutate(bud_burst = as.Date(paste(bud_burst,year),format="%jYYYY"),
first_leaf = as.Date(paste(first_leaf,year),format="%j"),
full_leaf = as.Date(paste(full_leaf,year),format="%j"),
open_flowers = as.Date(paste(open_flowers,year),format="%j"),
ripe_fruit = as.Date(paste(ripe_fruit,year),format="%j"),
colored_leaves = as.Date(paste(colored_leaves,year),format="%j"),
leaves_dropped = as.Date(paste(leaves_dropped,year),format="%j"))
ggplot(data, aes(bud_burst,reorder(species, bud_burst, FUN = median, na.rm = TRUE))) +
geom_violin(aes(fill = reorder(species, bud_burst, FUN = median, na.rm = TRUE)), show.legend = FALSE, na.rm = TRUE) +
stat_summary(fun = "median", size = 3.5, geom = "point", na.rm = TRUE) +
geom_jitter(aes(alpha = year), height = 0, width = 0.2, na.rm = TRUE) +
labs(
x = "Date",
y = "Species",
alpha = "Year"
) +
scale_y_discrete(limits=rev) +
theme(axis.text.y = element_text(face="italic",size=12),
axis.text.x = element_text(size=12),
axis.title = element_text(face="bold",size=13),
legend.text = element_text(size=12),
legend.title = element_text(size=13),
panel.background = element_rect(fill="white"),
panel.grid.major = element_line(color="gray93"))
View(data)
#| code-fold: true
#| fig-height: 6.5
#| fig-cap: "Calendar dates Thomas Mikesell observed breaking leaves for various tree species in Wauseon, Ohio"
library(tidyverse)
data <- read.csv("Mikesell_Phenology_Data.csv", header = TRUE, na.strings = "999") |>
mutate(bud_burst = as.Date(paste(bud_burst,year),format="%j %Y"),
first_leaf = as.Date(paste(first_leaf,year),format="%j"),
full_leaf = as.Date(paste(full_leaf,year),format="%j"),
open_flowers = as.Date(paste(open_flowers,year),format="%j"),
ripe_fruit = as.Date(paste(ripe_fruit,year),format="%j"),
colored_leaves = as.Date(paste(colored_leaves,year),format="%j"),
leaves_dropped = as.Date(paste(leaves_dropped,year),format="%j"))
ggplot(data, aes(bud_burst,reorder(species, bud_burst, FUN = median, na.rm = TRUE))) +
geom_violin(aes(fill = reorder(species, bud_burst, FUN = median, na.rm = TRUE)), show.legend = FALSE, na.rm = TRUE) +
stat_summary(fun = "median", size = 3.5, geom = "point", na.rm = TRUE) +
geom_jitter(aes(alpha = year), height = 0, width = 0.2, na.rm = TRUE) +
labs(
x = "Date",
y = "Species",
alpha = "Year"
) +
scale_y_discrete(limits=rev) +
theme(axis.text.y = element_text(face="italic",size=12),
axis.text.x = element_text(size=12),
axis.title = element_text(face="bold",size=13),
legend.text = element_text(size=12),
legend.title = element_text(size=13),
panel.background = element_rect(fill="white"),
panel.grid.major = element_line(color="gray93"))
#| code-fold: true
#| fig-height: 6.5
#| fig-cap: "Calendar dates Thomas Mikesell observed breaking leaves for various tree species in Wauseon, Ohio"
library(tidyverse)
data <- read.csv("Mikesell_Phenology_Data.csv", header = TRUE, na.strings = "999") |>
mutate(bud_burst = as.Date(paste(bud_burst,year),format="%j %Y"),
first_leaf = as.Date(paste(first_leaf,year),format="%j %Y"),
full_leaf = as.Date(paste(full_leaf,year),format="%j %Y"),
open_flowers = as.Date(paste(open_flowers,year),format="%j %Y"),
ripe_fruit = as.Date(paste(ripe_fruit,year),format="%j %Y"),
colored_leaves = as.Date(paste(colored_leaves,year),format="%j %Y"),
leaves_dropped = as.Date(paste(leaves_dropped,year),format="%j %Y"))
ggplot(data, aes(bud_burst,reorder(species, bud_burst, FUN = median, na.rm = TRUE))) +
geom_violin(aes(fill = reorder(species, bud_burst, FUN = median, na.rm = TRUE)), show.legend = FALSE, na.rm = TRUE) +
stat_summary(fun = "median", size = 3.5, geom = "point", na.rm = TRUE) +
geom_jitter(aes(alpha = year), height = 0, width = 0.2, na.rm = TRUE) +
labs(
x = "Date",
y = "Species",
alpha = "Year"
) +
scale_y_discrete(limits=rev) +
theme(axis.text.y = element_text(face="italic",size=12),
axis.text.x = element_text(size=12),
axis.title = element_text(face="bold",size=13),
legend.text = element_text(size=12),
legend.title = element_text(size=13),
panel.background = element_rect(fill="white"),
panel.grid.major = element_line(color="gray93"))
#| code-fold: true
#| fig-height: 6.5
#| fig-cap: "Calendar dates Thomas Mikesell observed breaking leaves for various tree species in Wauseon, Ohio"
library(tidyverse)
data <- read.csv("Mikesell_Phenology_Data.csv", header = TRUE, na.strings = "999") |>
mutate(bud_burst = as.Date(paste(bud_burst,year),format="%j"),
first_leaf = as.Date(paste(first_leaf,year),format="%j"),
full_leaf = as.Date(paste(full_leaf,year),format="%j"),
open_flowers = as.Date(paste(open_flowers,year),format="%j"),
ripe_fruit = as.Date(paste(ripe_fruit,year),format="%j"),
colored_leaves = as.Date(paste(colored_leaves,year),format="%j"),
leaves_dropped = as.Date(paste(leaves_dropped,year),format="%j"))
ggplot(data, aes(bud_burst,reorder(species, bud_burst, FUN = median, na.rm = TRUE))) +
geom_violin(aes(fill = reorder(species, bud_burst, FUN = median, na.rm = TRUE)), show.legend = FALSE, na.rm = TRUE) +
stat_summary(fun = "median", size = 3.5, geom = "point", na.rm = TRUE) +
geom_jitter(aes(alpha = year), height = 0, width = 0.2, na.rm = TRUE) +
labs(
x = "Date",
y = "Species",
alpha = "Year"
) +
scale_y_discrete(limits=rev) +
theme(axis.text.y = element_text(face="italic",size=12),
axis.text.x = element_text(size=12),
axis.title = element_text(face="bold",size=13),
legend.text = element_text(size=12),
legend.title = element_text(size=13),
panel.background = element_rect(fill="white"),
panel.grid.major = element_line(color="gray93"))
#| code-fold: true
#| fig-height: 6.5
#| fig-cap: "Calendar dates Thomas Mikesell observed breaking leaves for various tree species in Wauseon, Ohio"
library(tidyverse)
data <- read.csv("Mikesell_Phenology_Data.csv", header = TRUE, na.strings = "999") |>
mutate(bud_burst = as.Date(bud_burst,format="%j"),
first_leaf = as.Date(first_leaf,format="%j"),
full_leaf = as.Date(full_leaf,format="%j"),
open_flowers = as.Date(open_flowers,format="%j"),
ripe_fruit = as.Date(ripe_fruit,format="%j"),
colored_leaves = as.Date(colored_leaves,format="%j"),
leaves_dropped = as.Date(leaves_dropped,format="%j"))
ggplot(data, aes(bud_burst,reorder(species, bud_burst, FUN = median, na.rm = TRUE))) +
geom_violin(aes(fill = reorder(species, bud_burst, FUN = median, na.rm = TRUE)), show.legend = FALSE, na.rm = TRUE) +
stat_summary(fun = "median", size = 3.5, geom = "point", na.rm = TRUE) +
geom_jitter(aes(alpha = year), height = 0, width = 0.2, na.rm = TRUE) +
labs(
x = "Date",
y = "Species",
alpha = "Year"
) +
scale_y_discrete(limits=rev) +
theme(axis.text.y = element_text(face="italic",size=12),
axis.text.x = element_text(size=12),
axis.title = element_text(face="bold",size=13),
legend.text = element_text(size=12),
legend.title = element_text(size=13),
panel.background = element_rect(fill="white"),
panel.grid.major = element_line(color="gray93"))
library(shiny)
ui <- ...
library(shiny)
ui <- ...
runApp()
install.packages("bibliometrix")
install.packages("datawizard")
install.packages("DBI")
install.packages("downlit")
install.packages("evaluate")
install.packages("highr")
install.packages("insight")
install.packages("knitr")
install.packages("leaps")
install.packages("markdown")
install.packages("modelbased")
install.packages("nlme")
install.packages("quantreg")
install.packages("QuickJSR")
install.packages("RcppArmadillo")
install.packages("rlang")
install.packages("rsconnect")
install.packages("shinytest")
install.packages(c("SparseM", "StanHeaders", "xts"))
shiny::runApp('blog/2023/03/02/wauseon-tree-phenology')
runApp('blog/2023/03/02/wauseon-tree-phenology')
renv::snapshot()
renv::status()
?renv::status()
renv::project()
cwd()
cwd
renv::snapshot()
renv:status()
renv::status()
install.packages("yaml")
renv::snapshot()
renv::install("shinylive")
renv::install("downlit","xml2")
renv::status()
install.packages("shiny")
renv::install("shiny")
renv::status()
renv::snapshot()
renv::lockfile_modify()
renv::dependencies()
renv::settings$snapshot.type("all")
renv::snapshot()
install.packages("pak")
pak::pak("posit-dev/r-shinylive")
renv::status()
renv::snapshot()
renv::status()
shinylive::assets_info()
renv::deactivate()
.libPaths()
renv::activate()
renv::dependencies()
renv::settings()
renv::settings$snapshot.type()
renv::settings$snapshot.type("explicit")
renv::settings$snapshot.type()
renv::dependencies()
renv::dependencies()
renv::settings$snapshot.type()
renv::snapshot()
renv::settings$ignored.packages()
renv::settings$snapshot.type("all")
renv::update()
install.packages("usethis")
renv::clean()
renv::diagnostics()
renv::status?
?renv::status()
renv::status()
library(shinylive)
remove.packages("shinylive", lib="~/dcb-quarto-site/renv/library/R-4.3/x86_64-w64-mingw32")
renv::install("shinylive")
renv::status()
renv::snapshot()
renv::status()
renv::settings$snapshot.type("implicit")
renv::status()
renv::status()
git::dependencies()
renv::dependencies()
renv::status()
renv::dependencies()
renv::settings$snapshot.type()
renv::settings$snapshot.type("all")
renv::dependencies()
renv::status()
renv::rebuild()
renv::status()
renv::settings$snapshot.type("implicit")
renv::status()
renv::snapshot()
renv::status
renv::status()
renv::dependencies()
renv::use("bslib@0.7.0","shiny@1.8.1.1","shinylive@0.1.1")
renv::dependencies()
renv::status()
renv::install("rmarkdown")
renv::install("knitr")
renv::install("tidyverse")
renv::settings$external.libraries()
renv::settings$use.cache(FALSE)
renv::settings$use.cache()
renv::paths()
renv::paths
renv::project()
renv::repair()
renv::load()
renv::status()
library(bayestestR)
library(bayestestR)
detach("package:bayestestR", unload = TRUE)
remove.packages("credentials", lib="~/dcb-quarto-site/renv/library/R-4.3/x86_64-w64-mingw32")
library(cluster)
remove.packages("cluster", lib="~/dcb-quarto-site/renv/library/R-4.3/x86_64-w64-mingw32")
remove.packages("bayestestR", lib="~/dcb-quarto-site/renv/library/R-4.3/x86_64-w64-mingw32")
renv::remove("bayestestR")
remove.packages("googlesheets4", lib="~/dcb-quarto-site/renv/library/R-4.3/x86_64-w64-mingw32")
remove.packages("isoband", lib="~/dcb-quarto-site/renv/library/R-4.3/x86_64-w64-mingw32")
renv::snapshot()
renv::install("bayestestR")
renv::install("googlesheets4")
renv::install("isoband")
remove.packages("gitcreds", lib="~/dcb-quarto-site/renv/library/R-4.3/x86_64-w64-mingw32")
remove.packages("gh", lib="~/dcb-quarto-site/renv/library/R-4.3/x86_64-w64-mingw32")
remove.packages("gert", lib="~/dcb-quarto-site/renv/library/R-4.3/x86_64-w64-mingw32")
remove.packages("pak", lib="~/dcb-quarto-site/renv/library/R-4.3/x86_64-w64-mingw32")
remove.packages("pkgbuild", lib="~/dcb-quarto-site/renv/library/R-4.3/x86_64-w64-mingw32")
remove.packages("pkgdepends", lib="~/dcb-quarto-site/renv/library/R-4.3/x86_64-w64-mingw32")
remove.packages("pkgcache", lib="~/dcb-quarto-site/renv/library/R-4.3/x86_64-w64-mingw32")
renv::record("shiny@0.1.1")
renv::record("shiny@1.8.1.1")
renv::record("shinylive@0.1.1")
renv::status()
renv::record("archive@1.1.8")
renv::snapshot()
renv::clean()
renv::clean()
renv::snapshot()
renv::install("bslib")
renv::install("shiny")
renv::install("shinylive")
renv::install("askpass")
renv::install("backports")
renv::install("base64enc")
renv::install("bit")
renv::install("bit64")
renv::install("blob")
renv::install("broom")
renv::install("cachem")
renv::install("callr")
renv::install("cellranger")
renv::install("checkmate")
renv::status()
renv::install("cli")
renv::install("clipr")
renv::install("colorspace")
renv::install("commonmark")
renv::install("conflicted")
renv::install("cpp11")
renv::install("crayon")
renv::install("curl")
renv::install("data.table")
renv::install("datawizard")
renv::install("DBI")
renv::install("dbplyr")
renv::install("digest")
renv::install("distillery","dplyr","dtplyr")
renv::install("evaluate","extRemes","fansi","farver")
renv::install("fastmap","fontawesome","forcats","fs")
renv::install("gargle","generics","ggplot2","ggtext","glue")
renv::install("googledrive")
renv::install("gridExtra","gridtext","gtable","haven","highr")
renv::install("hms","htmltools","httr","ids","insight","jpeg")
renv::install("jquerylib","jsonlite","kableExtra","knitr","labeling","lattice")
renv::install("lifecycle","Lmoments","lubridate","magrittr","markdown")
renv::install("MASS","Matrix","memoise","mgcv","mime","modelr")
renv::install("modelsummary","munsell","nlme","openssl","parameters","performance","pillar")
renv::install("pkgconfig","png","prettyunits","processx")
renv::install("progress","ps","purrr","R6","ragg")
renv::install("rappdirs","RColorBrewer","Rcpp","RcppArmadillo")
renv::install("readr","readxl","rematch","rematch2","reprex","rlang","rmarkdown")
renv::install("rstudioapi","rvest","sass","scales","selectr")
renv::install("showtext","showtextdb","stringi","stringr","svglite","sys")
renv::install("sysfonts","systemfonts","tables","textshaping","tibble","tidyr")
renv::install("tidyselect","tidyverse","timechange","tinytable","tinytex","tzdb")
renv::install("uft8","uuid","vctrs","viridisLite","vroom","withr","xfun","xml2","yaml")
renv::install("utf8","uuid","vctrs","viridisLite","vroom","withr","xfun","xml2","yaml")
renv::isolate()
renv::lockfile_create()
renv::status()
renv::restore()
renv::repair()
renv::status()
renv::upgrade()
renv::status()
